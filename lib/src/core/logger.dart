/// Logging utilities for the SDK.\nlibrary;\n\nimport 'dart:developer' as developer;\nimport 'package:logging/logging.dart';\n\n/// SDK logger configuration and utilities.\nclass SDKLogger {\n  static final Logger _logger = Logger('AllFintechSDK');\n  static bool _initialized = false;\n  \n  /// Initialize the logger with the specified level.\n  static void initialize({Level level = Level.INFO}) {\n    if (_initialized) return;\n    \n    Logger.root.level = level;\n    Logger.root.onRecord.listen((record) {\n      developer.log(\n        record.message,\n        time: record.time,\n        level: record.level.value,\n        name: record.loggerName,\n        error: record.error,\n        stackTrace: record.stackTrace,\n      );\n    });\n    \n    _initialized = true;\n  }\n  \n  /// Log debug message.\n  static void debug(String message, [Object? error, StackTrace? stackTrace]) {\n    _logger.fine(message, error, stackTrace);\n  }\n  \n  /// Log info message.\n  static void info(String message, [Object? error, StackTrace? stackTrace]) {\n    _logger.info(message, error, stackTrace);\n  }\n  \n  /// Log warning message.\n  static void warning(String message, [Object? error, StackTrace? stackTrace]) {\n    _logger.warning(message, error, stackTrace);\n  }\n  \n  /// Log error message.\n  static void error(String message, [Object? error, StackTrace? stackTrace]) {\n    _logger.severe(message, error, stackTrace);\n  }\n  \n  /// Log API request.\n  static void logRequest(String method, String url, [Map<String, dynamic>? data]) {\n    if (_logger.level <= Level.FINE) {\n      debug('API Request: $method $url${data != null ? ' - Data: $data' : ''}');\n    }\n  }\n  \n  /// Log API response.\n  static void logResponse(String method, String url, int statusCode, [dynamic data]) {\n    if (_logger.level <= Level.FINE) {\n      debug('API Response: $method $url - Status: $statusCode${data != null ? ' - Data: $data' : ''}');\n    }\n  }\n}